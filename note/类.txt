1、python定义类()中写object和不写的区别
   python3中，类定义默认继承object，所以写不写没有区别
   但在python2中，并不是这样


   【python2】
   （1）不继承object对象，只拥有了__doc__ , module 和 自己定义的变量（假设一个）, 也就是说这个类的命名空间只有三个对象可以操作.
        class Animal:
            ...
   （2）继承了object对象，拥有了好多可操作对象，这些都是类中的高级特性，
        class Aminal(object):
            ...

      如：
   ['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__',
'__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',
'__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'name']


2、常用方法描述
  __init__：初始化方法，创建完对象后，自动调用
  __str__：返回一个对象的描述信息
  __slots__：限定对象可以绑定哪些成员变量


3、判断对象是否为某个类对象，如判断emp是否为Programmer对象：
if isinstance(emp, Programmer):
